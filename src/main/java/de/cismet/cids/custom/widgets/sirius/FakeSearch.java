/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package de.cismet.cids.custom.widgets.sirius;

import Sirius.navigator.ui.DashBoardWidget;

import org.openide.util.lookup.ServiceProvider;

import de.cismet.cids.custom.widgets.AbstractDashBoardWidget;

/**
 * DOCUMENT ME!
 *
 * @author   bfriedrich
 * @version  $Revision$, $Date$
 */
@ServiceProvider(service = DashBoardWidget.class)
public class FakeSearch extends AbstractDashBoardWidget {

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChange;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form FakeSearch.
     */
    public FakeSearch() {
        initComponents();
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        txtSearch = new javax.swing.JTextField();
        btnChange = new javax.swing.JButton();

        setOpaque(false);
        setLayout(new java.awt.GridBagLayout());

        txtSearch.setText(org.openide.util.NbBundle.getMessage(FakeSearch.class, "FakeSearch.txtSearch.text")); // NOI18N
        txtSearch.setPreferredSize(new java.awt.Dimension(100, 27));
        txtSearch.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    txtSearchActionPerformed(evt);
                }
            });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 8);
        add(txtSearch, gridBagConstraints);

        btnChange.setText(org.openide.util.NbBundle.getMessage(FakeSearch.class, "FakeSearch.btnChange.text")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 8);
        add(btnChange, gridBagConstraints);
    }                                                                                                           // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void txtSearchActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:
    } //GEN-LAST:event_txtSearchActionPerformed

    @Override
    public void init() {
    }

    @Override
    public void refresh() {
        this.txtSearch.setText("");
    }

    @Override
    public boolean isHeaderWidget() {
        return false;
    }

    @Override
    public int getX() {
        return 0;
    }

    @Override
    public int getY() {
        return 0;
    }

    @Override
    public void dispose() {
    }

    @Override
    public String getTitle() {
        return "Search";
    }
}
