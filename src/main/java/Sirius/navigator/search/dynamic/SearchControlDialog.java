/***************************************************
*
* cismet GmbH, Saarbruecken, Germany
*
*              ... and it just works.
*
****************************************************/
/*
 * SearchControlDialog.java
 *
 * Created on 13.12.2011, 15:54:15
 */
package Sirius.navigator.search.dynamic;

import Sirius.server.middleware.types.Node;
import Sirius.server.search.CidsServerSearch;

import org.apache.log4j.Logger;

import java.awt.Color;
import java.awt.GridBagConstraints;

/**
 * DOCUMENT ME!
 *
 * @author   jweintraut
 * @version  $Revision$, $Date$
 */
public class SearchControlDialog extends javax.swing.JDialog implements SearchControlListener {

    //~ Static fields/initializers ---------------------------------------------

    private static Logger LOG = Logger.getLogger(SearchControlDialog.class);

    //~ Instance fields --------------------------------------------------------

    private CidsServerSearch search;

    private SearchControlPanel pnlSearchCancel;
    private Color foregroundColor;
    private boolean allowUserToCloseDialog;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JLabel lblMessage;
    private javax.swing.JPanel pnlControls;
    private javax.swing.JSeparator sepMessage;
    // End of variables declaration//GEN-END:variables

    //~ Constructors -----------------------------------------------------------

    /**
     * Creates new form SearchControlDialog.
     *
     * @param  parent  DOCUMENT ME!
     * @param  modal   DOCUMENT ME!
     * @param  search  DOCUMENT ME!
     */
    public SearchControlDialog(final java.awt.Frame parent, final boolean modal, final CidsServerSearch search) {
        super(parent, modal);

        initComponents();

        this.search = search;
        pnlSearchCancel = new SearchControlPanel(this);
        foregroundColor = lblMessage.getForeground();
        lblMessage.setForeground(lblMessage.getBackground());
        pnlControls.add(pnlSearchCancel);
    }

    //~ Methods ----------------------------------------------------------------

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        btnClose = new javax.swing.JButton();
        lblMessage = new javax.swing.JLabel();
        sepMessage = new javax.swing.JSeparator();
        pnlControls = new javax.swing.JPanel();

        btnClose.setText(org.openide.util.NbBundle.getMessage(
                SearchControlDialog.class,
                "SearchControlDialog.btnClose.text")); // NOI18N
        btnClose.setFocusPainted(false);
        btnClose.addActionListener(new java.awt.event.ActionListener() {

                @Override
                public void actionPerformed(final java.awt.event.ActionEvent evt) {
                    btnCloseActionPerformed(evt);
                }
            });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(SearchControlDialog.class, "SearchControlDialog.title")); // NOI18N
        setMinimumSize(new java.awt.Dimension(300, 200));
        addWindowListener(new java.awt.event.WindowAdapter() {

                @Override
                public void windowClosing(final java.awt.event.WindowEvent evt) {
                    formWindowClosing(evt);
                }
            });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lblMessage.setIcon(new javax.swing.ImageIcon(
                getClass().getResource("/Sirius/navigator/search/dynamic/SearchControlDialog_lblMessage.png"))); // NOI18N
        lblMessage.setText(org.openide.util.NbBundle.getMessage(
                SearchControlDialog.class,
                "SearchControlDialog.lblMessage.text"));                                                         // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(lblMessage, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(sepMessage, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(pnlControls, gridBagConstraints);

        pack();
    } // </editor-fold>//GEN-END:initComponents

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void formWindowClosing(final java.awt.event.WindowEvent evt) { //GEN-FIRST:event_formWindowClosing
        if (allowUserToCloseDialog) {
            setVisible(false);
            dispose();
        }
    }                                                                      //GEN-LAST:event_formWindowClosing

    /**
     * DOCUMENT ME!
     *
     * @param  evt  DOCUMENT ME!
     */
    private void btnCloseActionPerformed(final java.awt.event.ActionEvent evt) { //GEN-FIRST:event_btnCloseActionPerformed
        setVisible(false);
        dispose();
    }                                                                            //GEN-LAST:event_btnCloseActionPerformed

    /**
     * DOCUMENT ME!
     */
    /**
     * DOCUMENT ME!
     */
    public void startSearch() {
        pnlSearchCancel.startSearch();
    }

    @Override
    public CidsServerSearch assembleSearch() {
        return search;
    }

    @Override
    public void searchStarted() {
        lblMessage.setForeground(foregroundColor);
    }

    @Override
    public void searchDone(final Node[] result) {
        if ((result == null) || (result.length == 0)) {
            lblMessage.setText(org.openide.util.NbBundle.getMessage(
                    SearchControlDialog.class,
                    "SearchControlDialog.lblMessage_emptyResult.text"));
            allowUserToCloseDialog = true;
            pnlControls.remove(pnlSearchCancel);
            pnlControls.add(btnClose);
        } else {
            setVisible(false);
            dispose();
        }
    }

    @Override
    public void searchCancelled() {
        setVisible(false);
        dispose();
    }

    @Override
    public boolean displaysEmptyResultMessage() {
        return false;
    }
}
